/**
 * digibase library for Arduino: TOKEI temp 温度の表示
 *
 * Create: 14/7/20
 * Author: a.ide
 *
 * Mar 07 2014: Added Arduino and C++ Library
 * License: GNU GPL v2 (see License.txt)
 *
 * (c)2014 digi-base
 */
#include "dgbaseTemp.h"

dgbaseTemp::dgbaseTemp(uint8_t ledcnt, WS2812* LED, cRGB chh, cRGB cmm, cRGB css)
	: dgbaseTOKEI(ledcnt, LED, chh, cmm, css)
{
	mColorhh = chh;
	mColormm = cmm;
	mColorss = css;
}

//温度
void dgbaseTemp::execute(float mpl, float dht, int wait) {

//	mpl = -45;

	MPL = mpl;
	DHT = dht;

	//LED
	if (mpl >= 0) {
		cRGB rgbs[mLedCount], tmps[mLedCount], cc;
		int8_t i = 0, p;
		for (; i < mpl; i++) {
			rgbs[i] = getColor(getLedPosition(i));
			tmps[i] = changeColor(mColorbk, (i + 1), mColormm, mColorbk);
		}
		for (; i < mLedCount; i++) {
			rgbs[i] = getColor(getLedPosition(i));
			tmps[i] = mColorbk;
		}

		i = 0;
		for (; i < mpl; i++) {
			for (int8_t j = 0; j < mLedCount; j++) {
				rgbs[j] = changeColor(rgbs[j], -3, mColorss, mColorbk);
				p = getLedPosition(j);
				if (j <= i) {
					cc = margeColor(rgbs[j], tmps[j]);
				}else{
					cc = rgbs[j];
				}
				setColor(p, cc);
			}
			syncLED(wait);
		}
		for (; i < mLedCount; i++) {
			p = getLedPosition(i);
			setColor(p, mColorbk);
		}
		syncLED();

	}else{
		cRGB rgbs[mLedCount], tmps[mLedCount], cc;
		int8_t i = 0, p;
		for (; i >= mpl; i--) {
			p = getLedPosition(i - 1);
			rgbs[p] = getColor(p);
			tmps[p] = changeColor(mColorbk, (i * (-1)) + 1, mColormm, mColorbk);
		}
		for (i = p; i < mLedCount; i++) {
			rgbs[i] = getColor(i);
			tmps[i] = mColorbk;
		}

		i = 0;
		for (; ((mpl++) < 0); i++) {
			for (int8_t j = 0; j < mLedCount; j++) {
				rgbs[j] = changeColor(rgbs[j], -2, mColorss, mColorbk);
				if (j <= i) {
					cc = margeColor(rgbs[j], tmps[j]);
				}else{
					cc = rgbs[j];
				}
				setColor(j, cc);
			}
			syncLED(wait);
		}
		for (; i < mLedCount; i++) {
			setColor(i, mColorbk);
		}
		syncLED();
	}
}

//湿度
void dgbaseTemp::execute(float humi, int wait) {
	HUMI = humi;
	
	//LED
	humi = ((humi / 1.6) + 0.9);
	int8_t i = 0;
	for (; i < humi; i++) {
		cRGB cc = changeColor(mColorbk, (i + 1), mColorhh, mColorbk);
		int8_t p = getLedPosition(i);
		setColor(p, cc);
		syncLED(wait);
	}
	for (; i < mLedCount; i++) {
		int8_t p = getLedPosition(i);
		setColor(p, mColorbk);
	}
	syncLED();
}

//dgbaseTemp::~dgbaseTemp() {
//}
